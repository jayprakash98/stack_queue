import java.util.Scanner;

public class CustomQueue {
    private int[] arr;
    private int front;
    private int rear;
    private int capacity;

    public CustomQueue(int capacity) {
        this.capacity = capacity;
        arr = new int[capacity];
        front = -1;
        rear = -1;
    }

    public void enqueue(int element) {
        if (isFull()) {
            System.out.println("Queue is full");
            return;
        }
        if (isEmpty()) {
            front = 0;
            rear = 0;
        } else {
            rear++;
        }
        arr[rear] = element;
    }

    public int dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return -1;
        }
        int element = arr[front];
        if (front == rear) {
            front = -1;
            rear = -1;
        } else {
            front++;
        }
        return element;
    }

    public int peek() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return -1;
        }
        return arr[front];
    }

    public boolean isEmpty() {
        return front == -1;
    }

    public boolean isFull() {
        return rear == capacity - 1;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the capacity of the queue: ");
        int capacity = scanner.nextInt();
        CustomQueue queue = new CustomQueue(capacity);

        System.out.println("Enter elements to enqueue into the queue:");
        for (int i = 0; i < capacity; i++) {
            int element = scanner.nextInt();
            queue.enqueue(element);
        }

        System.out.println("Elements dequeued from the queue:");
        for (int i = 0; i < capacity; i++) {
            int element = queue.dequeue();
            System.out.println(element);
        }
    }
}
